@model DeveloperStore.Presentation.Models.WelcomeViewModel
@{
    ViewData["Title"] = "Users";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<p>User: @Model.Name</p>

<h1>Welcome to Developer Store!</h1>

<a href="/Product/RegisteredProducts" class="text-decoration-none">Back to Products</a>

<!-- Div Success -->
<div class="alert alert-success alert-dismissible fade show" id="divSuccess" role="alert" style="display:none;">
    <strong>Success!</strong><br /> <label id="successMsg"></label>
    <button type="button" class="btn-close" aria-label="Close" onclick="$('#divSuccess').hide();"></button>
</div>

<!-- Div Error -->
<div class="alert alert-danger alert-dismissible fade show" id="divError" role="alert" style="display:none;">
    <strong>Error!</strong><br /> <label id="errorMsg"></label>
    <button type="button" class="btn-close" aria-label="Close" onclick="$('#divError').hide();"></button>
</div>

<input type="hidden" value="@Model.LoginToken" id="hdnLoginToken" />
<h5 class="text-center mb-3">These are our Users</h5>

<div id="divPageItemsPerPageOrderBy" class="d-flex justify-content-between mb-3">


    <div class="me-2">
        <label for="sizeInput" class="form-label">Items per page:</label>
        <input type="number" id="sizeInput" class="form-control" style="width: 80px; display: inline-block;" min="1" value="10">
    </div>

    <div class="me-2">
        <label for="orderSelect" class="form-label">Order by:</label>
        <select id="orderSelect" class="form-select" style="width: 150px; display: inline-block;">
            <option value="name asc">Name Asc</option>
            <option value="name desc">Name Desc</option>
            <option value="email asc">Email Asc</option>
            <option value="email desc">Email Desc</option>
            <option value="userProfile asc">User Profile Asc</option>
            <option value="userProfile desc">User Profile Desc</option>
        </select>
    </div>
    <div class="me-2">
        <label for="txtUserId" class="form-label">User Id:</label>
        <input id="txtUserId" name="UserId" type="text" class="form-control" style="width: 300px; display: inline-block;" placeholder="Enter User Id" />
    </div>
    <div class="me-2">
        <button id="btnFilter" class="btn btn-primary" style="align-self: flex-end;">Search</button>
    </div>
</div>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Email</th>
            <th>User Profile</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="userList">
        <!-- Users will be shown here -->
    </tbody>
</table>

<div class="d-flex justify-content-center mt-3 pagination-container">
    <button id="btnPrevious" class="btn btn-primary me-2">Previous</button>
    <button id="btnNext" class="btn btn-primary">Next</button>
</div>

<script>
    $(document).ready(function () {
        let currentPage = 1;
        let pageSize = parseInt($("#sizeInput").val(), 10);
        let orderBy = "name asc";
        let userId = "";

        function loadUsers(page) {
            pageSize = $("#sizeInput").val();
            orderBy = $("#orderSelect").val();
            userId = $("#txtUserId").val();
            fetch(`/Product/GetAllUsersAsync?_page=${page}&_size=${pageSize}&_order=${orderBy}&_userId=${userId}`, {
                method: 'GET'
            })
            .then(response => response.json())
            .then(data => {
                let users = data.users;
                let pagination = data.pagination;
                let userListHtml = '';

                if (users.length > 0) {
                    users.forEach(user => {
                        userListHtml += `
                            <tr>
                                <td>${user.name}</td>
                                <td>${user.email}</td>
                                <td>${user.userProfile}</td>
                                <td>
                                    <a href="/User/Edit?Id=${user.id}" class="btn btn-warning btn-sm">Edit</a>
                                    <button class="btn btn-danger btn-sm btn-delete" data-id="${user.id}" data-name="${user.name}">Delete</button>
                                </td>
                            </tr>
                        `;
                    });
                    $("#userList").html(userListHtml);
                    updatePagination(pagination);
                } else {
                    $("#userList").html('<tr><td colspan="4">No users found.</td></tr>');
                    $(".pagination-container").hide();
                }
            })
            .catch(error => {
                $("#errorMsg").html('Failed to load users.');
                $("#divError").show();
            });
        }

        function updatePagination(pagination) {
            $("#pageSelect").empty();
            for (let i = 1; i <= pagination.totalPages; i++) {
                $("#pageSelect").append(`<option value="${i}" ${i === pagination.currentPage ? 'selected' : ''}>${i}</option>`);
            }

            $("#btnPrevious").toggle(pagination.hasPreviousPage);
            $("#btnNext").toggle(pagination.hasNextPage);

            $(".pagination-container").toggle(pagination.hasPreviousPage || pagination.hasNextPage);
        }

        $("#btnFilter").click(function () {
            loadUsers(1); // Chama a função para carregar a primeira página com os filtros aplicados
        });

        $("#pageSelect").change(function () {
            currentPage = $(this).val();
            loadUsers(currentPage);
        });

        $("#sizeInput, #orderSelect").change(function () {
            pageSize = parseInt($("#sizeInput").val(), 10);
            currentPage = 1;
            loadUsers(currentPage);
        });

        $("#btnPrevious").click(function () {
            if (currentPage > 1) {
                currentPage--;
                loadUsers(currentPage);
            }
        });

        $("#btnNext").click(function () {
            currentPage++;
            loadUsers(currentPage);
        });

        $(document).on("click", ".btn-delete", function (e) {
            e.preventDefault();
            let userId = $(this).data("id");
            let name = $(this).data("name");
            if (confirm(`Confirm the deletion of the user ${name}?`)) {
                $.ajax({
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    url: '/User/Delete',
                    type: 'POST',
                    data: JSON.stringify({ UserId: userId }),
                    contentType: 'application/json',
                    success: function (response) {
                        if (response.success) {
                            alert("User " + name + " deleted successfully!");
                            loadUsers(currentPage);
                        } else {
                            $("#errorMsg").html(response.errorStr);
                            $("#divError").show();
                        }
                    },
                    error: function (xhr, status, error) {
                        alert(`Error deleting user: ${error}`);
                    }
                });
            }
        });

        loadUsers(currentPage);
    });
</script>
